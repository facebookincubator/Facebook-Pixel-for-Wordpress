<?xml version="1.0"  encoding="UTF-8" ?>
<?xml-model xlink:href="/usr/share/php5/PEAR/data/phing/etc/phing-grammar.rng"
        type="application/xml"
        schematypens="http://relaxng.org/ns/structure/1.0" ?>

<project name="pixel-plugins" basedir="." default="main">
    <property file="./build.properties" />

    <!-- Fileset for all files -->
    <fileset dir="${basedir}" id="sourcedir">
        <exclude name=".gitignore" />
        <exclude name="build.properties" />
        <exclude name="build.xml" />
        <exclude name="README.md" />
        <exclude name="vendor/**" />
        <exclude name="task/**" />
        <exclude name="__tests__/**" />
        <exclude name="js/**" />
    </fileset>

    <!-- Fileset for all built JS files -->
    <fileset dir="${basedir}" id="all-fbe-js">
        <include name="js/fbe_allinone.js" />
    </fileset>

    <!-- Fileset for files using GuzzleHttp-->
    <fileset dir="${buildsourcedir}/vendor/facebook/php-business-sdk" id="files_using_guzzle">
        <include name="src/FacebookAds/Object/ServerSide/EventRequestAsync.php" />
        <include name="src/FacebookAds/Object/ServerSide/BatchProcessor.php" />
        <include name="src/FacebookAds/Object/ServerSide/AsyncClient.php" />
        <include name="test/FacebookAdsTest/Object/ServerSide/BatchProcessorTest.php" />
        <include name="test/FacebookAdsTest/Object/ServerSide/EventRequestAsyncTest.php" />
        <include name="test/FacebookAdsTest/Object/ServerSide/AsyncClientTest.php" />
    </fileset>

    <!-- ============================================  -->
    <!-- Target: Clean                                 -->
    <!-- ============================================  -->
    <target name="Clean" description="Clean the environment">
        <echo msg="Running Prepare..." />
        <echo msg="Cleaning build folder..." />
        <delete dir="${builddir}" />
        <echo msg="Build folder deleted" />
        <echo msg="Prepare complete" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Build                                 -->
    <!-- ============================================  -->
    <target name="Build" description="rebuilds this package" depends="Clean">
        <echo msg="Running Build..." />
        <echo msg="Copy files into build folder..." />
        <copy todir="${buildsourcedir}">
            <fileset refid="sourcedir" />
        </copy>
        <copy todir="${buildsourcedir}">
            <fileset refid="all-fbe-js" />
        </copy>
        <echo msg="Copy complete" />
        <echo msg="Run compose install..." />
        <composer command="install">
            <arg value="--working-dir=${buildsourcedir}" />
            <arg value="--no-dev" />
        </composer>
        <echo msg="composer install complete" />
        <echo msg="Deleting files using Guzzle" />
        <delete>
            <fileset refid="files_using_guzzle" />
        </delete>
        <echo msg="Files using Guzzle deleted" />
        <echo msg="Build complete" />
        <echo msg="Adding Version Number..." />
        <taskdef name="addversion" classname="FacebookWordpressAddVersionNumberTask" classpath="${taskdir}" />
        <addversion path="${facebookforwordpress}" />
        <echo msg="Adding version number complete" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Test                                  -->
    <!-- ============================================  -->
    <target name="Test" description="Run tests" depends="Clean">
        <echo msg="Running Test..." />
        <exec command="./vendor/bin/phpunit --bootstrap ${testdir}/bootstrap.php --colors ${testdir}" dir="${basedir}" passthru="true" />
        <echo msg="Test complete" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Package                               -->
    <!-- ============================================  -->
    <target name="Package" description="Create package" depends="Build">
        <echo msg="Running Package..." />
            <taskdef name="versionnumbertask" classname="FacebookWordpressGetVersionNumberTask" classpath="${taskdir}" />
            <versionnumbertask versionprop="version.number" />
            <zip destfile="${builddir}/${packagebasename}-${version.number}.zip">
                <fileset dir="${builddir}/" defaultexcludes="true">
                    <include name="**" />
                    <exclude name="./test" />
                </fileset>
            </zip>
        <echo msg="Package complete" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Dockerize                               -->
    <!-- ============================================  -->
    <target name="Dockerize" description="Dockerize test website" depends="Build">
        <echo msg="Composing Docker images for E2E tests..." />
        <echo msg="Step1: Creating local docker image for E2E test site..." />
        <exec command="docker build -t '${dockerimagename}' ." dir="${testdir}/e2e/site" passthru="true" />
        <echo msg="Docker Image Creation complete" />
        <echo msg="Step2: Starting up E2E test site... " />
        <exec command="docker-compose down --volumes" dir="${testdir}/e2e/site" passthru="false" />
        <exec command="docker-compose up -d" dir="${testdir}/e2e" passthru="true" />
        <echo msg="Docker Image Creation complete" />
        <echo msg="Dockerize complete" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Help                                  -->
    <!-- ============================================  -->
    <target name="Help" description="Usage help">
        <echo msg="Available Targets: " />
        <echo msg="Clean  : Clean the environment." />
        <echo msg="Build  : Build the project." />
        <echo msg="Test   : Run all tests." />
        <echo msg="Package: Create plugin package (zip)." />
        <echo msg="Dockerize: Create docker images for E2E site and start the containers." />
        <echo msg="If you run phing without providing any target, following targets will run in order: Clean, Test, Build, Package." />
    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT) Target: main                        -->
    <!-- ============================================  -->
    <target name="main" description="Prepare, Build, Test, Package" depends="Clean, Test, Build, Package">
    </target>
</project>
